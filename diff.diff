diff --git a/FBSimulatorControl.xcodeproj/project.pbxproj b/FBSimulatorControl.xcodeproj/project.pbxproj
index 5010dea..a3efb50 100644
--- a/FBSimulatorControl.xcodeproj/project.pbxproj
+++ b/FBSimulatorControl.xcodeproj/project.pbxproj
@@ -146,6 +146,7 @@
 		AAD3051F1BD4D5B10047376E /* photo0.png in Resources */ = {isa = PBXBuildFile; fileRef = AAD3051D1BD4D5B10047376E /* photo0.png */; };
 		AAD305201BD4D5B10047376E /* photo1.png in Resources */ = {isa = PBXBuildFile; fileRef = AAD3051E1BD4D5B10047376E /* photo1.png */; };
 		AADF65911BFF39E2000E3CDE /* FBSimulatorControl+Class.h in Headers */ = {isa = PBXBuildFile; fileRef = AADF65901BFF39E2000E3CDE /* FBSimulatorControl+Class.h */; settings = {ATTRIBUTES = (Public, ); }; };
+		BA268D771C0D28DA009DE1EA /* XCTestConfiguration.h in Sources */ = {isa = PBXBuildFile; fileRef = BA268D761C0D28DA009DE1EA /* XCTestConfiguration.h */; settings = {ASSET_TAGS = (); }; };
 		E7A30F041AC72D1E00000000 /* DVTiPhoneSimulatorRemoteClient.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DD70E291AC72D1E00000000 /* DVTiPhoneSimulatorRemoteClient.framework */; };
 		E7A30F0476B173B900000000 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DD70E2976B173B900000000 /* Cocoa.framework */; };
 		E7A30F04A6018C7A00000000 /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1DD70E29A6018C7A00000000 /* CoreGraphics.framework */; };
@@ -892,6 +893,7 @@
 		AAD3051D1BD4D5B10047376E /* photo0.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = photo0.png; sourceTree = "<group>"; };
 		AAD3051E1BD4D5B10047376E /* photo1.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = photo1.png; sourceTree = "<group>"; };
 		AADF65901BFF39E2000E3CDE /* FBSimulatorControl+Class.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "FBSimulatorControl+Class.h"; sourceTree = "<group>"; };
+		BA268D761C0D28DA009DE1EA /* XCTestConfiguration.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = XCTestConfiguration.h; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -1707,6 +1709,7 @@
 				AAC241271BB311970054570C /* FBSimulatorWindowTilingTests.m */,
 				AA111CC11BBE662E0054AFDD /* FBTaskExecutorTests.m */,
 				AA017F261BD7770300F45E9D /* FBWritableLogTests.m */,
+				BA268D761C0D28DA009DE1EA /* XCTestConfiguration.h */,
 			);
 			path = Tests;
 			sourceTree = "<group>";
@@ -2051,6 +2054,7 @@
 			files = (
 				AA111CCE1BBE7C5A0054AFDD /* CoreSimulatorDoubles.m in Sources */,
 				AA51E49A1BA1CA3C0053141E /* FBSimulatorControlApplicationLaunchTests.m in Sources */,
+				BA268D771C0D28DA009DE1EA /* XCTestConfiguration.h in Sources */,
 				AA8DF8C01BB1698000CC0411 /* FBSimulatorSessionLifecycleTests.m in Sources */,
 				AA51E49B1BA1CA3C0053141E /* FBSimulatorControlConfigurationTests.m in Sources */,
 				AA37C92B1C062BE800E38000 /* FBProcessQueryTests.m in Sources */,
diff --git a/FBSimulatorControlTests/Tests/FBSimulatorControlApplicationLaunchTests.m b/FBSimulatorControlTests/Tests/FBSimulatorControlApplicationLaunchTests.m
index 607b267..a2e04c1 100644
--- a/FBSimulatorControlTests/Tests/FBSimulatorControlApplicationLaunchTests.m
+++ b/FBSimulatorControlTests/Tests/FBSimulatorControlApplicationLaunchTests.m
@@ -14,6 +14,116 @@
 #import "FBSimulatorControlAssertions.h"
 #import "FBSimulatorControlFixtures.h"
 #import "FBSimulatorControlTestCase.h"
+#import "XCTestConfiguration.h"
+
+
+@interface KIFTestRunner: NSObject
+
+@end
+
+@implementation KIFTestRunner
+/**
+ Set up XCTestConfigurtionFilePath crap
+ 2015-11-30 17:31:56.704 xctool[18205:11745952] <XCTestConfiguration: 0x7f9f8dd028e0>
+ testBundleURL:file:///Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest/
+ productModuleName:mntf_ios_sample_appTests
+ testsToSkip:
+ testsToRun:(null)
+ reportResultsToIDE:no
+ sessionIdentifier:<__NSConcreteUUID 0x7f9f8dd01870> 56C417B0-EC3F-4AE7-870A-182BD8214042
+ pathToXcodeReportingSocket:(null)
+ disablePerformanceMetrics:no
+	treatMissingBaselinesAsFailures:no
+ baselineFileURL:(null)
+ targetApplicationPath:(null)
+ targetApplicationBundleID:(null)
+ reportActivities:no
+ */
+- (NSDictionary *)testEnvironmentWithSpecifiedTestConfiguration
+{
+    Class XCTestConfigurationClass = NSClassFromString(@"XCTestConfiguration");
+    NSAssert(XCTestConfigurationClass, @"XCTestConfiguration isn't available");
+
+    XCTestConfiguration *configuration = [[XCTestConfigurationClass alloc] init];
+    [configuration setProductModuleName:@"mntf_ios_sample_appTests"];
+    [configuration setTestBundleURL:[NSURL fileURLWithPath:@"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest/"]];
+    [configuration setReportResultsToIDE:NO];
+
+    NSString *XCTestConfigurationFilename = [NSString stringWithFormat:@"%@-%@", @"mntf_ios_sample_appTests", [configuration.sessionIdentifier UUIDString]];
+    NSString *XCTestConfigurationFilePath = [MakeTempFileWithPrefix(XCTestConfigurationFilename) stringByAppendingPathExtension:@"xctestconfiguration"];
+    if ([[NSFileManager defaultManager] fileExistsAtPath:XCTestConfigurationFilePath]) {
+        [[NSFileManager defaultManager] removeItemAtPath:XCTestConfigurationFilePath error:nil];
+    }
+    if (![NSKeyedArchiver archiveRootObject:configuration toFile:XCTestConfigurationFilePath]) {
+        NSAssert(NO, @"Couldn't archive XCTestConfiguration to file at path %@", XCTestConfigurationFilePath);
+    }
+
+    return @{
+             @"XCTestConfigurationFilePath": XCTestConfigurationFilePath,
+             };
+}
+
+NSString *MakeTempFileWithPrefix(NSString *prefix)
+{
+    return MakeTempFileInDirectoryWithPrefix(TemporaryDirectoryForAction(), prefix);
+}
+
+NSString *MakeTempFileInDirectoryWithPrefix(NSString *directory, NSString *prefix)
+{
+    const char *template = [[directory stringByAppendingPathComponent:[NSString stringWithFormat:@"%@.XXXXXXX", prefix]] UTF8String];
+
+    char tempPath[PATH_MAX] = {0};
+    strcpy(tempPath, template);
+
+    int handle = mkstemp(tempPath);
+    NSCAssert(handle != -1, @"Failed to make temporary file name for template %s, error: %d", template, handle);
+    close(handle);
+
+    return @(tempPath);
+}
+
+NSString *TemporaryDirectoryForAction()
+{
+    if (__tempDirectoryForAction == nil) {
+        NSString *nameTemplate = nil;
+
+        // Let our names be consistent while under test - we don't want our tests
+        // to have to match against random values.
+        if (IsRunningUnderTest()) {
+            nameTemplate = [NSString stringWithFormat:@"xctool_temp_UNDERTEST_%d", [[NSProcessInfo processInfo] processIdentifier]];
+        } else {
+            nameTemplate = @"xctool_temp_XXXXXX";
+        }
+
+        __tempDirectoryForAction = MakeTemporaryDirectory(nameTemplate);
+    }
+
+    return __tempDirectoryForAction;
+}
+
+NSString *MakeTemporaryDirectory(NSString *nameTemplate)
+{
+    NSMutableData *template = [[[NSTemporaryDirectory() stringByAppendingPathComponent:nameTemplate]
+                                dataUsingEncoding:NSUTF8StringEncoding] mutableCopy];
+    [template appendBytes:"\0" length:1];
+
+    if (!mkdtemp(template.mutableBytes) && !IsRunningUnderTest()) {
+        NSLog(@"Failed to create temporary directory: %s", strerror(errno));
+        abort();
+    }
+
+    return [NSString stringWithUTF8String:template.bytes];
+}
+
+BOOL IsRunningUnderTest()
+{
+    NSString *processName = [[NSProcessInfo processInfo] processName];
+    return ([processName isEqualToString:@"xctest"] ||
+            [processName isEqualToString:@"xctest-x86_64"]);
+}
+
+static NSString *__tempDirectoryForAction = nil;
+@end
 
 @interface FBSimulatorControlApplicationLaunchTests : FBSimulatorControlTestCase
 
@@ -57,6 +167,60 @@
   [self.assert consumeNotification:FBSimulatorSessionApplicationProcessDidLaunchNotification];
   [self.assert noNotificationsToConsume];
 }
+//AppTargetLocation = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphoneos/mntf-ios-sample-app.app/mntf-ios-sample-app";
+//"DYLD_FRAMEWORK_PATH" = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator:/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks";
+//"DYLD_INSERT_LIBRARIES" = "/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/IDEBundleInjection.framework/IDEBundleInjection";
+//"DYLD_LIBRARY_PATH" = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator:/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks";
+//NSUnbufferedIO = YES;
+//"OBJC_DISABLE_GC" = YES;
+//TestBundleLocation = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest";
+//XCInjectBundle = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest";
+//XCInjectBundleInto = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphoneos/mntf-ios-sample-app.app/mntf-ios-sample-app";
+//"XCODE_DBG_XPC_EXCLUSIONS" = "com.apple.dt.xctestSymbolicator";
+//XCTestConfigurationFilePath = "/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest/mntf-ios-sample-appTests-DA64A050-A60F-4B9A-83FA-B08A8372F9A6.xctestconfiguration";
+- (void)testMyApp {
+    NSError *error = nil;
+    FBSimulatorSession *session = [self.control createSessionForSimulatorConfiguration:FBSimulatorConfiguration.iPhone5 error:&error];
+    FBApplicationLaunchConfiguration *appLaunchSafari = [FBApplicationLaunchConfiguration
+                                                   configurationWithApplication:[FBSimulatorApplication systemApplicationNamed:@"MobileSafari"]
+                                                   arguments:@[]
+                                                   environment:@{}];
+    BOOL success = [[[session.interact
+                      bootSimulator]
+                     launchApplication:appLaunchSafari]
+                    performInteractionWithError:&error];
+
+    FBSimulatorSession *session2 = [self.control createSessionForSimulatorConfiguration:FBSimulatorConfiguration.iPhone6 error:&error];
+//    FBSimulatorApplication *myApp = [FBSimulatorApplication applicationWithPath:@"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-app.app" error:&error];
+    FBSimulatorApplication *myApp = [FBSimulatorApplication applicationWithPath:@"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-app.app" error:&error];
+    FBApplicationLaunchConfiguration *appLaunch = [FBApplicationLaunchConfiguration
+                                                   configurationWithApplication:myApp
+                                                   arguments:@[@"-NSTreatUnknownArgumentsAsOpen", @"NO", @"-ApplePersistenceIgnoreState", @"YES"]
+                                                   environment:@{
+                                                                 @"AppTargetLocation":@"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-app.app/mntf-ios-sample-app",
+                                                                 @"DYLD_FALLBACK_FRAMEWORK_PATH": @"/Applications/Xcode 2.app/Contents/Developer/Library/Frameworks:/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks",
+                                                                 @"DYLD_FRAMEWORK_PATH" :@"/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks:/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator",
+                                                                 @"DYLD_INSERT_LIBRARIES" : @"/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/IDEBundleInjection.framework/IDEBundleInjection",
+                                                                 @"DYLD_LIBRARY_PATH":@"/Applications/Xcode 2.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks:/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator",
+                                                                 @"NSUnbufferedIO" : @"YES",
+                                                                 @"OBJC_DISABLE_GC" : @"YES",
+                                                                 @"TestBundleLocation" : @"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest",
+                                                                 @"XCInjectBundle" : @"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-appTests.xctest",
+                                                                 @"XCInjectBundleInto" : @"/Users/khu/Library/Developer/Xcode/DerivedData/mntf-ios-sample-app-cixnsqxcijpgqucewcxjaxekeets/Build/Products/Debug-iphonesimulator/mntf-ios-sample-app.app/mntf-ios-sample-app",
+                                                                 @"XCTestConfigurationFilePath": [[[KIFTestRunner alloc] init] testEnvironmentWithSpecifiedTestConfiguration][@"XCTestConfigurationFilePath"]
+                                                                 }];
+    [[[[session2.interact bootSimulator] installApplication:myApp] launchApplication:appLaunch] performInteractionWithError:&error];
+//    [[session2.interact bootSimulator] performInteractionWithError:&error];
+//    [[session2.interact
+//          launchApplication:appLaunch]
+//         performInteractionWithError:&error];
+
+
+    XCTAssertTrue(success);
+    XCTAssertNil(error);
 
+}
 
 @end
+
+
diff --git a/FBSimulatorControlTests/Tests/XCTestConfiguration.h b/FBSimulatorControlTests/Tests/XCTestConfiguration.h
index 2fd592d..e1c28a5 100644
--- a/FBSimulatorControlTests/Tests/XCTestConfiguration.h
+++ b/FBSimulatorControlTests/Tests/XCTestConfiguration.h
@@ -1,9 +1,31 @@
 //
-//  XCTestConfiguration.m
-//  FBSimulatorControl
-//
-//  Created by Keqiu Hu on 11/30/15.
+//     Generated by class-dump 3.5 (64 bit).
 //
+//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
 //
 
 #import <Foundation/Foundation.h>
+
+@interface XCTestConfiguration : NSObject <NSSecureCoding>
+
+@property(copy) NSURL *baselineFileURL;
+@property BOOL disablePerformanceMetrics;
+@property(copy) NSString *pathToXcodeReportingSocket;
+@property(copy) NSString *productModuleName;
+@property BOOL reportResultsToIDE;
+@property(copy) NSUUID *sessionIdentifier;
+@property(copy) NSString *targetApplicationBundleID;
+@property(copy) NSString *targetApplicationPath;
+@property(copy) NSURL *testBundleURL;
+@property(copy) NSSet *testsToRun;
+@property(copy) NSSet *testsToSkip;
+@property BOOL treatMissingBaselinesAsFailures;
+
++ (id)activeTestConfiguration;
++ (id)configurationWithContentsOfFile:(id)arg1;
++ (void)setActiveTestConfiguration:(id)arg1;
++ (BOOL)supportsSecureCoding;
+
+- (BOOL)writeToFile:(id)arg1;
+
+@end
